akka {

  stdout-loglevel = "INFO"
  loglevel = "INFO"
  log-config-on-start = off

  actor {
    warn-about-java-serializer-usage = false
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      unhandled = on
      event-stream = on
    }
  }

  log-dead-letters = 0
  log-dead-letters-during-shutdown = off


  persistence {

    journal {

      # Path to the journal plugin to be used
      plugin = "akka.persistence.journal.leveldb"

      # LevelDB journal plugin.
      leveldb {

        # Class name of the plugin.
        class = "akka.persistence.journal.leveldb.LeveldbJournal"

        # Dispatcher for the plugin actor.
        plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"

        # Dispatcher for message replay.
        replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"

        # Storage location of LevelDB files.
        dir = "target/example/journal"

        # Use fsync on write
        fsync = on

        # Verify checksum on read.
        checksum = off

        # Native LevelDB (via JNI) or LevelDB Java port
        native = false

        event-adapters {
          domain-tagger = "raffle.akka.persistence.TagWriteEventAdapter"
        }

        event-adapter-bindings = {
          "raffle.domain.model.RaffleEvent" = domain-tagger
        }
      }

    }

    query.journal.leveldb {
      # The LevelDB write journal is notifying the query side as soon as things
      # are persisted, but for efficiency reasons the query side retrieves the events
      # in batches that sometimes can be delayed up to the configured ‘refresh-interval‘.
      refresh-interval = 1s
      # How many events to fetch in one query (replay) and keep buffered until they
      # are delivered downstreams.
      max-buffer-size = 100

    }

    snapshot-store {

      # Path to the snapshot store plugin to be used
      plugin = "akka.persistence.snapshot-store.local"

      # Local filesystem snapshot store plugin.
      local {

        # Class name of the plugin.
        class = "akka.persistence.snapshot.local.LocalSnapshotStore"

        # Dispatcher for the plugin actor.
        plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"

        # Dispatcher for streaming snapshot IO.
        stream-dispatcher = "akka.persistence.dispatchers.default-stream-dispatcher"

        # Storage location of snapshot files.
        dir = "target/example/snapshots"
      }
    }
  }
}
